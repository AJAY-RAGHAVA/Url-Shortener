plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'com.aventrix.jnanoid:jnanoid:2.0.0' // For NanoID
    implementation 'org.apache.poi:poi-ooxml:5.2.3' // For Excel handling
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2' // For JSON handling
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2' // Add this line
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    implementation 'com.aventrix.jnanoid:jnanoid:2.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.google.cloud.sql:postgres-socket-factory:1.11.0'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // Add this line
    implementation 'org.postgresql:postgresql:42.6.0' // PostgreSQL JDBC driver
//    implementation 'org.springframework:spring-web:6.0.11' // Adjust version as per your Spring Boot version
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


tasks.named('test') {
    useJUnitPlatform()
}
